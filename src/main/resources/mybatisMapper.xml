<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://files.monghoo.com/resources/mybatis-3-mapper.dtd">

<mapper namespace="com.example.daily.mybatis.MybatisDao">
	<!-- 启用缓存 -->
	<cache />
	<select id="getMenus" resultType="Map">
		select * from menu where
		id=#{idddd}
	</select>

	<select id="getMenus4ManyParams" resultType="Map">
		select * from menu
		where required=#{param1} and parentMenu=#{param2}
	</select>

	<select id="getMenus4MapParams" resultType="Map" parameterType="Map">
		select * from menu where required=#{required} and
		parentMenu=#{parentMenu}
	</select>

	<select id="getMenus4POJO" resultType="Map"
		parameterType="com.example.daily.mybatis.Menu">
		select * from menu where required=#{required} and
		parentMenu=#{parentMenu}
	</select>

	<!-- ResultMap collections -->
	<select id="getMapMenuSeprate" resultMap="menuResultMapSeprate">
		SELECT m.oid, m.menu_name, m.menu_code, #{roleOid} as roleOid
		FROM
		hc_menu m left join hc_role_menu rm on rm.menu_oid=m.oid
		<where>
			m.del_flag = 1 AND m.is_menu = 1 AND m.pid IS NULL
			<if test="null != roleOid and roleOid != ''">
				AND rm.role_oid = #{roleOid}
			</if>
		</where>
		group by m.oid
	</select>
	<resultMap type="com.example.daily.mybatis.Menu" id="menuResultMapSeprate">
		<id column="oid" jdbcType="VARCHAR" property="oid" />
		<result column="menu_name" jdbcType="VARCHAR" property="menuName" />
		<result column="roleOid" jdbcType="VARCHAR" property="roleOid" />
		<result column="menu_code" jdbcType="VARCHAR" property="menuCode" />
		<collection property="childs" ofType="com.example.daily.mybatis.Menu"
			column="{oid=oid,roleOid=roleOid}" select="findMenuByPid" />
	</resultMap>
	<select id="findMenuByPid" parameterType="java.util.Map"
		resultMap="menuResultMapSeprate">
		select m.oid, m.menu_name, m.menu_code, #{roleOid} as roleOid from
		hc_menu m
		left join hc_role_menu rm on rm.menu_oid=m.oid
		<where>
			m.pid=#{oid} and m.del_flag = 1 AND m.is_menu = 1
			<if test="null != roleOid and roleOid != ''">
				AND rm.role_oid = #{roleOid}
			</if>
		</where>
		group by m.oid
	</select>
	<resultMap type="com.example.daily.mybatis.Menu" id="baseMenuMapping">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="oid" jdbcType="VARCHAR" property="oid" />
        <result column="pid" jdbcType="VARCHAR" property="pid" />
        <result column="menu_name" jdbcType="VARCHAR" property="menuName" />
        <result column="menu_url" jdbcType="VARCHAR" property="menuUrl" />
        <result column="menu_sort" jdbcType="VARCHAR" property="menuSort" />
        <result column="is_menu" jdbcType="INTEGER" property="isMenu" />
        <result column="menu_code" jdbcType="INTEGER" property="menuCode" />
        <result column="del_flag" jdbcType="INTEGER" property="delFlag" />
        <result column="create_by" jdbcType="VARCHAR" property="createBy" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="role_oid" jdbcType="VARCHAR" property="roleOid" />
    </resultMap>
	<select id="getMenuDiffParamType" resultMap="baseMenuMapping">
		SELECT oid, pid, menu_code, menu_name FROM hc_menu
		<where>
			del_flag=1
			<if test="menu.menuName != null and menu.menuName !=''">
				and menu_name like CONCAT('%',#{menu.menuName},'%')
			</if>
		</where>
		<if test="page > -1 and rows > 0">
			limit #{page}, #{rows}
		</if>
	</select>
</mapper>
